AWSTemplateFormatVersion: 2010-09-09
Description: >
  This template contains a standard high 
  availability network setup accross three
  availability zones.

# This template creates:
#   VPC
#   Internet Gateway
#   Public Route Table
#   Public Subnet (3)
#   NAT Gateway (3)
#   Private Subnet (3)
#   Private Route Table (3)

######################
# Resources section
######################

Parameters:
  Changelog:
    Description: A description of all the changes made in this stack. This is required for the template to update.
    Type: String

Resources:

  ## VPC

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: 10.0.0.0/16
      
  ## Internet Gateway

  InternetGateway:
    Type: AWS::EC2::InternetGateway
  
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  ## NAT Gateway EIPs

  NATGatewayAEIP:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc

  NATGatewayBEIP:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc

  NATGatewayCEIP:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: vpc
  
  ## Public Route Table

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
       - Key: Name
         Value: Public Route
  
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  
  ############### Public Subnet A ############
  
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Select 
       - 0
       - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: Public Subnet A

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable
  
  PublicSubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      NetworkAclId: !GetAtt 
        - VPC
        - DefaultNetworkAcl

  PublicSubnetUtility:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.255.0/24
      AvailabilityZone: !Select 
       - 0
       - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: Public Subnet Utility
        - Key: Description
          Value: This subnet will be used for utility servers such as bastion hosts, VPNs, etc.

  PublicSubnetUtilityRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetUtility
      RouteTableId: !Ref PublicRouteTable
  
  PublicSubnetUtilityNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetUtility
      NetworkAclId: !GetAtt 
        - VPC
        - DefaultNetworkAcl

  ############### Public Subnet B ############


  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select 
       - 1
       - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: Public Subnet B

  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable
  
  PublicSubnetBNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      NetworkAclId: !GetAtt 
        - VPC
        - DefaultNetworkAcl

  ############### Public Subnet C ############


  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select 
       - 2
       - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: Public Subnet C

  PublicSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref PublicRouteTable
  
  PublicSubnetCNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      NetworkAclId: !GetAtt 
        - VPC
        - DefaultNetworkAcl

 ## NAT Gateways

  NATGatewayA:
    Type: AWS::EC2::NatGateway
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NATGatewayAEIP
        - AllocationId
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: NAT Gateway A

  NATGatewayB:
    Type: AWS::EC2::NatGateway
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NATGatewayBEIP
        - AllocationId
      SubnetId: !Ref PublicSubnetB
      Tags:
        - Key: Name
          Value: NAT Gateway B

  NATGatewayC:
    Type: AWS::EC2::NatGateway
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NATGatewayCEIP
        - AllocationId
      SubnetId: !Ref PublicSubnetC
      Tags:
        - Key: Name
          Value: NAT Gateway C

  ## Private Routes

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
       - Key: Name
         Value: Private Route A
  
  PrivateRouteA:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayA

  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
       - Key: Name
         Value: Private Route B
  
  PrivateRouteB:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayB

  PrivateRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
       - Key: Name
         Value: Private Route C
  
  PrivateRouteC:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PrivateRouteTableC
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayC


  ############### Private Subnet A ############
  
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select 
       - 0
       - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: Private Subnet A       

  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTableA
  
  PrivateSubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      NetworkAclId: !GetAtt 
        - VPC
        - DefaultNetworkAcl

  ############### Private Subnet B ############


  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Select 
       - 1
       - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: Private Subnet B

  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTableB
  
  PrivateSubnetBNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      NetworkAclId: !GetAtt 
        - VPC
        - DefaultNetworkAcl

  ############### Private Subnet C ############


  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.5.0/24
      AvailabilityZone: !Select 
       - 2
       - Fn::GetAZs: !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: Private Subnet C

  PrivateSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetC
      RouteTableId: !Ref PrivateRouteTableC
  
  PrivateSubnetCNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetC
      NetworkAclId: !GetAtt 
        - VPC
        - DefaultNetworkAcl

######################
# Outputs section
######################

Outputs:
  
  Changelog:
    Description: A description of all the changes made in this stack. This is required for the template to update.
    Value: !Ref Changelog

  VPC:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPCID'
  
  PublicSubnetA:
    Description: The subnet ID to use for public web servers on availability zone a
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnetA'

  PublicSubnetB:
    Description: The subnet ID to use for public web servers on availability zone b
    Value: !Ref PublicSubnetB
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnetB'

  PublicSubnetC:
    Description: The subnet ID to use for public web serverson availability zone c
    Value: !Ref PublicSubnetC
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnetC'

  PrivateSubnetA:
    Description: The subnet ID to use for private web servers on availability zone a
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetA'

  PrivateSubnetB:
    Description: The subnet ID to use for private web servers on availability zone b
    Value: !Ref PrivateSubnetB
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetB'

  PrivateSubnetC:
    Description: The subnet ID to use for private web serverson availability zone c
    Value: !Ref PrivateSubnetC
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetC'

